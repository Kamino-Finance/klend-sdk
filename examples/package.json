{
  "name": "example-klend-sdk-client",
  "description": "Example Typescript SDK client for interacting with the Kamino Lending (klend) protocol",
  "version": "1.0.0",
  "main": "dist/index.js",
  "author": "Kamino Finance",
  "homepage": "https://kamino.finance",
  "bugs": {
    "url": "https://github.com/Kamino-Finance/klend-sdk/issues"
  },
  "license": "MIT",
  "private": false,
  "scripts": {
    "lint:fix": "yarn prettier --write .",
    "lint:fix:kvault-tutorial": "yarn prettier --write \"kvault-tutorial/**/*.ts\"",
    "loan-ltv": "yarn tsx klend-examples/example_loan_ltv.ts",
    "loan-value": "yarn tsx klend-examples/example_loan_value.ts",
    "user-loans": "yarn tsx klend-examples/example_user_loans.ts",
    "market-reserves": "yarn tsx klend-examples/example_market_reserves.ts",
    "reserve-apy": "yarn tsx klend-examples/example_reserve_apy.ts",
    "reserve-reward-apy": "yarn tsx klend-examples/example_reserve_reward_apy.ts",
    "reserve-apy-history": "yarn tsx klend-examples/example_reserve_apy_history.ts",
    "reserve-caps": "yarn tsx klend-examples/example_reserve_caps.ts",
    "reserve-supply-borrow": "yarn tsx klend-examples/example_reserve_supply_and_borrow.ts",
    "deposit-mint-ctokens": "yarn tsx klend-examples/example_deposit_mint_ctokens.ts",
    "deposit-in-obligation": "yarn tsx klend-examples/example_deposit_in_obligation.ts",
    "borrow-tokens": "yarn tsx klend-examples/example_borrow.ts",
    "burn-ctokens-redeem": "yarn tsx klend-examples/example_burn_ctokens_redeem_tokens.ts",
    "harvest-farm-reward": "yarn tsx klend-examples/example_harvest_reward.ts",
    "multiply-deposit": "yarn tsx klend-examples/example_multiply_deposit_transaction.ts",
    "multiply-deposit-kswap": "yarn tsx klend-examples/example_multiply_deposit_transaction_kswap.ts",
    "multiply-withdraw": "yarn tsx klend-examples/example_multiply_withdraw_transaction.ts",
    "multiply-withdraw-kswap": "yarn tsx klend-examples/example_multiply_withdraw_transaction_kswap.ts",
    "multiply-adjust": "yarn tsx klend-examples/example_multiply_adjust_transaction.ts",
    "multiply-adjust-kswap": "yarn tsx klend-examples/example_multiply_adjust_transaction_kswap.ts",
    "multiply-loan-info-and-pnl": "yarn tsx klend-examples/example_multiply_loan_info_and_pnl.ts",
    "multiply-manage-position-transaction": "yarn tsx klend-examples/example_multiply_manage_position_transaction.ts",
    "supplied-and-borrowed-token-and-pending-rewards-for-user": "yarn tsx klend-examples/example_read_supplied_and_borrowed_token_and_pending_rewards_for_user.ts",
    "get-obligations-on-reserve-filter": "yarn tsx klend-examples/example_get_obligations_based_on_reserve_filter.ts",
    "change-market-admin": "yarn tsx klend-examples/example_change_market_admin.ts",
    "extra-farm-reward-apy": "yarn tsx klend-examples/example_extra_farm_reward_apy.ts",
    "kvault:create_vault": "yarn tsx kvault-examples/example_create_vault.ts",
    "kvault:get_user_info_in_vault": "yarn tsx kvault-examples/example_get_user_info_in_vault.ts",
    "kvault:get_user_pending_rewards_for_vault": "yarn tsx kvault-examples/example_get_user_pending_rewards_for_vault.ts",
    "kvault:get_vault_info": "yarn tsx kvault-examples/example_get_vault_info.ts",
    "kvault:get_vaults_batch": "yarn tsx kvault-examples/example_get_vaults_batch.ts",
    "kvault:invest_all_reserves": "yarn tsx kvault-examples/example_invest_all_reserves.ts",
    "kvault:invest_single_reserve": "yarn tsx kvault-examples/example_invest_single_reserve.ts",
    "kvault:change_vault_admin": "yarn tsx kvault-examples/example_manager_change_vault_admin.ts",
    "kvault:give_up_pending_fee": "yarn tsx kvault-examples/example_manager_give_up_pending_fees.ts",
    "kvault:remove_vault_allocation": "yarn tsx kvault-examples/example_manager_remove_vault_allocation.ts",
    "kvault:set_vault_farm": "yarn tsx kvault-examples/example_manager_set_vault_farm.ts",
    "kvault:set_vault_reserve_allocation": "yarn tsx kvault-examples/example_manager_set_vault_reserve_allocation.ts",
    "kvault:withdraw_everything_and_block_all_reserves": "yarn tsx kvault-examples/example_manager_withdraw_everything_and_block_all_reserves.ts",
    "kvault:withdraw_everything_and_block_single_reserve": "yarn tsx kvault-examples/example_manager_withdraw_everything_and_block_invest_in_single_reserve.ts",
    "kvault:withdraw_pending_fees": "yarn tsx kvault-examples/example_manager_withdraw_pending_fees.ts",
    "kvault:set_unallocated_weight_and_cap": "yarn tsx kvault-examples/example_set_unallocated_weight_and_cap.ts",
    "kvault:update_vault_config": "yarn tsx kvault-examples/example_update_vault_config.ts",
    "kvault:update_vault_fees": "yarn tsx kvault-examples/example_update_vault_fees.ts",
    "kvault:user_claim_rewards": "yarn tsx kvault-examples/example_user_claim_rewards.ts",
    "kvault:user_deposit": "yarn tsx kvault-examples/example_user_deposit.ts",
    "kvault:user_withdraw": "yarn tsx kvault-examples/example_user_withdraw.ts",
    "kvault:read-vault-holding-and-pending-rewards": "yarn tsx kvault-examples/example_read_vault_holding_and_pending_rewards.ts",
    "build": "rm -rf dist/; tsc",
    "build:ci": "rm -rf dist/; tsc --project tsconfig.ci.json"
  },
  "dependencies": {
    "@kamino-finance/farms-sdk": "^3.2.11",
    "@kamino-finance/klend-sdk": "link:../",
    "@kamino-finance/kswap-sdk": "^1.3.0",
    "@kamino-finance/scope-sdk": "^10.1.0",
    "@solana/compat": "^2.1.1",
    "@solana/kit": "^2.3.0",
    "@solana/web3.js": "^1.98.2",
    "@solana-program/address-lookup-table": "^0.7.0",
    "@solana-program/token": "^0.5.1",
    "@solana-program/token-2022": "^0.4.2",
    "axios": "^1.6.8"
  },
  "devDependencies": {
    "@types/bn.js": "^5.1.6",
    "@types/node": "^22.1.0",
    "@types/node-fetch": "^2.6.7",
    "prettier": "^3.3.3",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.1",
    "typescript": "^5.4.5"
  }
}
